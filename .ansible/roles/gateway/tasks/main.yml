---
- name: Install prerequisites for OpenResty
  become: true
  ansible.builtin.package:
    name:
      - apt-transport-https
      - ca-certificates
      - curl
      - gnupg
      - lsb-release
    state: present

- name: Import OpenResty GPG key
  become: true
  ansible.builtin.get_url:
    url: https://openresty.org/package/pubkey.gpg
    dest: /etc/apt/trusted.gpg.d/openresty.asc
    mode: '0644'
    force: true

- name: Add OpenResty repository
  become: true
  ansible.builtin.apt_repository:
    repo: "deb [arch=amd64 signed-by=/etc/apt/trusted.gpg.d/openresty.asc] http://openresty.org/package/ubuntu {{ ansible_lsb.codename }} main"
    state: present
    update_cache: true

- name: Install OpenResty
  become: true
  ansible.builtin.package:
    name: openresty
    state: present

- name: Ensure OpenResty log directory exists
  become: true
  ansible.builtin.file:
    path: /var/log/openresty
    state: directory
    owner: root
    group: root
    mode: '0755'

- name: Create conf.d directory
  become: true
  ansible.builtin.file:
    path: /usr/local/openresty/nginx/conf/conf.d
    state: directory
    owner: root
    group: root
    mode: '0755'

- name: Template nginx.conf (global OpenResty config)
  become: true
  ansible.builtin.template:
    src: nginx.conf.j2
    dest: /usr/local/openresty/nginx/conf/nginx.conf
    owner: root
    group: root
    mode: '0644'
  notify: Restart OpenResty

- name: Ensure acme-challenge directory exists
  become: true
  ansible.builtin.file:
    path: /var/www/letsencrypt/.well-known/acme-challenge
    state: directory
    owner: root
    group: root
    mode: '0755'

- name: Add Certbot server block to OpenResty configuration
  become: true
  ansible.builtin.template:
    src: certbot.conf.j2
    dest: /usr/local/openresty/nginx/conf/conf.d/certbot.conf
    owner: root
    group: root
    mode: '0644'
  notify: Restart OpenResty

- name: Add CrowdSec GPG key
  become: true
  ansible.builtin.apt_key:
    url: https://packagecloud.io/crowdsec/crowdsec/gpgkey
    state: present

- name: Add CrowdSec apt repository
  become: true
  ansible.builtin.apt_repository:
    repo: "deb https://packagecloud.io/crowdsec/crowdsec/ubuntu/ {{ ansible_lsb.codename }} main"
    state: present
    filename: crowdsec

- name: Update apt cache
  become: true
  ansible.builtin.apt:
    update_cache: true
    cache_valid_time: 3600

- name: Install latest CrowdSec from official repo
  become: true
  ansible.builtin.package:
    name: crowdsec
    state: present

- name: Install CrowdSec OpenResty bouncer
  become: true
  ansible.builtin.package:
    name: crowdsec-openresty-bouncer
    state: present
  notify: Restart OpenResty

- name: Set cscli hub_branch to master
  become: true
  ansible.builtin.lineinfile:
    path: /etc/crowdsec/config.yaml
    regexp: '^(\s*)hub_branch:'
    line: '  hub_branch: master'
    insertafter: '^cscli:'

- name: Update CrowdSec hub catalog
  become: true
  ansible.builtin.command: cscli hub update
  register: cscli_hub_update
  changed_when: "'updated' in cscli_hub_update.stdout"

- name: Get installed collections
  become: true
  ansible.builtin.command: cscli collections list -o raw
  register: installed_collections
  changed_when: false

- name: Install AppSec collections if missing
  become: true
  ansible.builtin.command: >
    cscli collections install crowdsecurity/appsec-virtual-patching crowdsecurity/appsec-generic-rules
  when: >
    "'crowdsecurity/appsec-virtual-patching' not in installed_collections.stdout or
     'crowdsecurity/appsec-generic-rules' not in installed_collections.stdout"
  register: install_appsec
  changed_when: "'installed' in install_appsec.stdout or 'updated' in install_appsec.stdout"

- name: Ensure acquisition directory for AppSec exists
  become: true
  ansible.builtin.file:
    path: /etc/crowdsec/acquis.d
    state: directory
    owner: root
    group: root
    mode: '0755'

- name: Create AppSec acquisition config
  become: true
  ansible.builtin.copy:
    dest: /etc/crowdsec/acquis.d/appsec.yaml
    owner: root
    group: root
    mode: '0644'
    content: |
      appsec_config: crowdsecurity/appsec-default
      labels:
        type: appsec
      listen_addr: 127.0.0.1:7422
      source: appsec
  notify: Restart CrowdSec

- name: Ensure APPSEC_URL is present in bouncer config
  become: true
  ansible.builtin.lineinfile:
    path: /etc/crowdsec/bouncers/crowdsec-openresty-bouncer.conf
    regexp: '^APPSEC_URL='
    line: 'APPSEC_URL=http://127.0.0.1:7422'
    create: false
    backrefs: true
  notify: Restart OpenResty

- name: Allow HTTP (port 80) so Certbot can work
  community.general.ufw:
    rule: allow
    port: 80
    proto: tcp

- name: Install system libraries for MaxMind DB
  become: true
  ansible.builtin.package:
    name:
      - libmaxminddb0
      - libmaxminddb-dev
      - build-essential
      - unzip
    state: present

- name: Install lua-resty-maxminddb via OPM
  become: true
  ansible.builtin.command: opm get anjia0532/lua-resty-maxminddb
  args:
    creates: /usr/local/openresty/site/lualib/resty/maxminddb.lua

- name: Ensure maxminddb directory exists
  become: true
  ansible.builtin.file:
    path: /usr/local/share/GeoIP
    state: directory
    owner: root
    group: root
    mode: '0755'

- name: Deploy GeoLite2 database
  become: true
  ansible.builtin.copy:
    src: GeoLite2-Country.mmdb
    dest: /usr/local/share/GeoIP/GeoLite2-Country.mmdb
    owner: root
    group: root
    mode: '0644'

- name: Deploy GeoIP blocking config
  become: true
  ansible.builtin.template:
    src: filter.conf.j2
    dest: /usr/local/openresty/nginx/conf/conf.d/filter.conf
    owner: root
    group: root
    mode: '0644'
  notify: Restart OpenResty

- name: Remove crowdsec_openresty.conf
  ansible.builtin.file:
    dest: /usr/local/openresty/nginx/conf/conf.d/crowdsec_openresty.conf
    state: absent
  notify: Restart OpenResty

- name: Restart Openresty (in case notifier was not procd)
  become: true
  ansible.builtin.service:
    name: openresty
    state: restarted
